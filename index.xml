<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>XXOO</title><link>https://pinocc.cn/</link><description>Recent content on XXOO</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Tue, 26 Oct 2021 00:33:04 +0800</lastBuildDate><atom:link href="https://pinocc.cn/index.xml" rel="self" type="application/rss+xml"/><item><title>公私钥&amp;Https工作流程</title><link>https://pinocc.cn/posts/pub_and_pri/</link><pubDate>Tue, 26 Oct 2021 00:33:04 +0800</pubDate><guid>https://pinocc.cn/posts/pub_and_pri/</guid><description>公钥&amp;amp;私钥 公钥私钥可以相互加解密
作用1：加解密流程 爱丽丝与鲍伯假设来解释：
爱丽丝与鲍伯事先互不认识，也没有可靠安全的沟通渠道，但爱丽丝现在却要透过不安全的互联网向鲍伯发送信息 爱丽丝撰写好原文，原文在未加密的状态下称之为明文 x 鲍伯使用密码学安全伪随机数生成器产生一对密钥，其中一个作为公钥为 c，另一个作为私钥 d 鲍伯可以用任何方法发送公钥 c 给爱丽丝，即使伊夫在中间窃听到 c 也没问题 爱丽丝用公钥 c 把明文 x 进行加密，得到密文从 c(x) 爱丽丝可以用任何方法传输密文 c(x) 给鲍伯，即使伊夫在中间窃听到密文 c(x) 也没问题 鲍伯收到密文，用私钥 d 对密文进行解密 d(c(x))，得到爱丽丝撰写的明文 x 由于伊夫没有得到鲍伯的私钥 d，所以无法得知明文 x 如果爱丽丝丢失了她自己撰写的原文 x，在没有得到鲍伯的私钥 d 的情况下，她的处境将等同伊夫，即无法透过鲍伯的公钥 c 和密文 c(x), 重新得到原文 x 谁要和我通信, 就要按照我的规则(秘钥)来
*Alice 收到消息时, 不知道消息一定是 Bob 发来的 (无法证明 Bob 就是 Bob), 因为 Alice 的公钥是公开的, 任何人都可以拿到, *任何人都可以用公钥加密消息后发给 Alice.
作用2: 数字签名 如果某一用户使用他的私钥加密明文，任何人都可以用该用户的公钥解密密文；
由于私钥只由该用户自己持有，故可以肯定该文件必定出自于该用户；</description></item></channel></rss>